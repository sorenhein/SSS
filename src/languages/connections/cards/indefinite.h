/*
   SSS, a bridge single-suit single-dummy solver.

   Copyright (C) 2020-2022 by Soren Hein.

   See LICENSE and README.
*/

#ifndef SSS_CARDS_INDEFINITE_H
#define SSS_CARDS_INDEFINITE_H

#include "../../VerbalConnection.h"
#include "../../PhraseExpansion.h"

enum IndefiniteEnum: unsigned
{
  INDEFINITE_2 = 0,
  INDEFINITE_3 = 1,
  INDEFINITE_4 = 2,
  INDEFINITE_5 = 3,
  INDEFINITE_6 = 4,
  INDEFINITE_7 = 5,
  INDEFINITE_8 = 6,
  INDEFINITE_9 = 7,
  INDEFINITE_TEN = 8,
  INDEFINITE_JACK = 9,
  INDEFINITE_QUEEN = 10,
  INDEFINITE_KING = 11,
  INDEFINITE_ACE = 12
};

enum IndefiniteGroups: unsigned
{
  GROUP_INDEFINITE = 0
};


list<VerbalConnection> indefiniteConnection =
{
  { INDEFINITE_2, "CARD_INDEF_2", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_3, "CARD_INDEF_3", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_4, "CARD_INDEF_4", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_5, "CARD_INDEF_5", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_6, "CARD_INDEF_6", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_7, "CARD_INDEF_7", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_8, "CARD_INDEF_8", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_9, "CARD_INDEF_9", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_TEN, "CARD_INDEF_TEN", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_JACK, "CARD_INDEF_JACK", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_QUEEN, "CARD_INDEF_QUEEN", GROUP_DEFINITE, PHRASE_NONE },
  { DEFINITE_KING, "CARD_INDEF_KING", GROUP_DEFINITE, PHRASE_NONE },
  { INDEFINITE_ACE, "CARD_INDEF_ACE", GROUP_DEFINITE, PHRASE_NONE }
};

#endif
